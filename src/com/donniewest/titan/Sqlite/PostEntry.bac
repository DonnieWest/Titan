import android.content.Context
import android.database.sqlite.{SQLiteDatabase, SQLiteOpenHelper}

class PostEntry extends SQLiteOpenHelper {

  val TABLE_NAME = "Posts"
  val AUTOINCREMENT_ID = "_ID"
  val COLUMN_POST_ID = "post_id"
  val COLUMN_ENTITY = "entity"
  val COLUMN_MENTIONS = "mentions"
  val COLUMN_PUBLISHED = "published"
  val COLUMN_TITLE = "title"
  val COLUMN_BODY = "text"
  val COLUMN_ATTACHMENTS = "attachments"
  val TEXT_TYPE = "TEXT"
  val COMMA_SEP = " , "
  val DATABASE_VERSION = 1

  val SQL_CREATE_ENTRIES = "CREATE TABLE " + TABLE_NAME + " (" +
    AUTOINCREMENT_ID + " INTEGER PRIMARY KEY," +
    COLUMN_POST_ID + TEXT_TYPE + COMMA_SEP +
    COLUMN_ENTITY + TEXT_TYPE + COMMA_SEP +
    COLUMN_MENTIONS + TEXT_TYPE + COMMA_SEP +
    COLUMN_PUBLISHED + TEXT_TYPE + COMMA_SEP +
    COLUMN_TITLE + TEXT_TYPE + COMMA_SEP +
    COLUMN_BODY + TEXT_TYPE + COMMA_SEP +
    COLUMN_ATTACHMENTS + TEXT_TYPE + COMMA_SEP + " )"

  val SQL_DELETE_ENTRIES = "DROP TABLE IF EXISTS " + TABLE_NAME_ENTRIES

  def this(context: Context) = {

    this(context, TABLE_NAME, null, DATABASE_VERSION)


  }

  override def onCreate(db:SQLiteDatabase) = db.execSQL(SQL_CREATE_ENTRIES)

  override def onUpgrade(db:SQLiteDatabase, oldversion:Int, newversion: Int) = {

    db.execSQL(SQL_DELETE_ENTRIES)
    onCreate(db)

  }

  override def onDowngrade(db:SQLiteDatabase, oldversion:Int, newversion: Int) = onUpgrade(db, oldversion, newversion)


  }